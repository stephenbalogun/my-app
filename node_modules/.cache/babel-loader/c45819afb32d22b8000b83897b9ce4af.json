{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DR. BALOGUN STEPHEN\\\\OneDrive - Catholic Caritas Foundation\\\\Documents\\\\alt school\\\\web-design\\\\my-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo.js\";\nimport Form from \"./components/Form.js\";\nimport FilterButton from \"./components/FilterButton.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n_c = FILTER_NAMES;\n\nfunction App(props) {\n  _s();\n\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask(name) {\n    if (name.name.length === 0) {\n      alert(\"You did not make any input\");\n    } else {\n      const newTask = {\n        id: `todo-${nanoid()}`,\n        name,\n        completed: false\n      };\n      setTasks([...tasks, newTask]);\n    }\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.map(task => /*#__PURE__*/_jsxDEV(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask\n  }, task.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this));\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/_jsxDEV(FilterButton, {\n    name: name\n  }, name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this));\n  const [filter, setFilter] = useState('All');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoapp stack-large\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TodoMatic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      addTask: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters btn-group stack-exception\",\n      children: filterList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"list-heading\",\n      children: headingText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      // role=\"list\"\n      className: \"todo-list stack-large stack-exception\",\n      \"aria-labelledby\": \"list-heading\",\n      children: taskList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"EeRnFHbkPD5i3v9CpmwzSMi80Ig=\");\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"FILTER_NAMES\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","nanoid","Todo","Form","FilterButton","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","App","props","tasks","setTasks","toggleTaskCompleted","id","updatedTasks","map","addTask","name","length","alert","newTask","deleteTask","remainingTasks","filter","editTask","newName","editedTaskList","taskList","tasksNoun","headingText","filterList","setFilter"],"sources":["C:/Users/DR. BALOGUN STEPHEN/OneDrive - Catholic Caritas Foundation/Documents/alt school/web-design/my-app/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport Todo from \"./components/Todo.js\";\nimport Form from \"./components/Form.js\";\nimport FilterButton from \"./components/FilterButton.js\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (task) => !task.completed,\n  Completed: (task) => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return { ...task, completed: !task.completed };\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function addTask(name) {\n    if (name.name.length === 0) {\n      alert(\"You did not make any input\");\n    } else {\n      const newTask = { id: `todo-${nanoid()}`, name, completed: false };\n      setTasks([...tasks, newTask]);\n    }\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter((task) => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map((task) => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return { ...task, name: newName };\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.map((task) => (\n    <Todo\n      id={task.id}\n      name={task.name}\n      completed={task.completed}\n      key={task.id}\n      toggleTaskCompleted={toggleTaskCompleted}\n      deleteTask={deleteTask}\n      editTask={editTask}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? \"tasks\" : \"task\";\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton key={name} name={name}/>\n  ));\n  \n\n  const [filter, setFilter] = useState('All');\n\n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>TodoMatic</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        // role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}